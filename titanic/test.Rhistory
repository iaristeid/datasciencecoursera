setwd("./R/titanic/")
getwd()
training <- read.csv("./data/train.csv")
testing <- read.csv("./data/test.csv")
head(training)
names(training)
M <- abs(cor(training[sapply(training[,-2], is.numeric)]))
sapply(training[,-2], is.numeric)
sapply(training[,-1:2], is.numeric)
sapply(training[,-1-2], is.numeric)
sapply(training[,-2], is.numeric)
head(training[sapply(training[,-2], is.numeric)])
head(training)
names(training[sapply(training[,-2], is.numeric)])
names(training)
head(training,2)
names(training[sapply(training[,-2], is.numeric)],2)
head(training[sapply(training[,-2], is.numeric)],2)
cor(training[sapply(training[,-2], is.numeric)])
cor(training[sapply(training[,-2], is.numeric),-1])
sapply(training[,-2], is.numeric)
training[sapply(training[,-2], is.numeric)]
names(training[sapply(training[,-2], is.numeric)])
names(training[sapply(training, is.numeric)])
M <- abs(cor(training[sapply(training[], is.numeric)]))
M
diag(M) <- 0
which(M > 0.8,arr.ind=T)
which(M > 0.8,arr.ind=T)
which(M > 0.5,arr.ind=T)
which(M > 0.6,arr.ind=T)
which(M > 0.5,arr.ind=T)
names(training)
library(caret)
rf1 <- train(Survived ~ Sex+Age+Fare+Pclass,train1,method="rf")
library(caret)
library(randomForest)
inTrain <- createDataPartition(training$Survived,p=0.75,list=FALSE)
train1 <- training[inTrain,]
test1 <- training[-inTrain,]
library(caret)
rf1 <- train(Survived ~ Sex+Age+Fare+Pclass,train1,method="rf")
rf1
pred1 <- predict(rf1,test1[,-2])
pred1
A <- table(pred1,test1$Survived)
size(pred1)
length(pred1)
length(test1$Survived)
warnings()
library(caret)
rf1 <- train(Survived ~ Fare+Pclass,train1,method="rf")
pred1 <- predict(rf1,test1[,-2])
A <- table(pred1,test1$Survived)
error1 <- (sum(A)-sum(diag(A)))/sum(A)
A
pred1 <- predict(rf1,test1[,-2])
A <- table(pred1,test1$Survived)
error1 <- (sum(A)-sum(diag(A)))/sum(A)
error1
pred1
predRight1 <- pred1==test1$Survived
sum(predRight1)
predRight1
rf1 <- train(Survived ~ Sex+Fare+Pclass,train1,method="rf")
require(graphics)
pairs(mtcars, main = "mtcars data")
require(graphics)
pairs(training, main = "training data")
require(graphics)
pairs(training, main = "training data")
pairs(training[,3:], main = "training data")
pairs(training[,3:wnd], main = "training data")
pairs(training[,3:end], main = "training data")
names(training)
pairs(training[,3:12], main = "training data")
error1
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, importance=TRUE, ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=training, importance=TRUE, ntree=2000)
as.factor(training$Survived)
names(training)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=training, importance=TRUE, ntree=2000)
training$Survived=as.factor(training$Survived)
training$Survived
fit <- randomForest(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=training, importance=TRUE, ntree=2000)
fit <- randomForest(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train1, importance=TRUE, ntree=2000)
fit <- randomForest(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare, data=train1, importance=TRUE, ntree=2000)
fit <- randomForest(Survived ~ Pclass + Sex + Age + SibSp + Fare, data=train1, importance=TRUE, ntree=2000)
fit <- randomForest(Survived ~ Pclass + Sex + Age + Fare, data=train1, importance=TRUE, ntree=2000)
fit <- randomForest(Survived ~ Pclass + Sex + Fare, data=train1, importance=TRUE, ntree=2000)
y
fit
fit <- randomForest(Survived ~ Pclass + Sex + Fare + Age, data=train1, importance=TRUE, ntree=2000)
fit <- randomForest(Survived ~ Pclass + Sex + Fare, data=train1, importance=TRUE, ntree=2000)
pred2 <- predict(fit,test1[,-2])
pred2
B <- table(pred2,test1$Survived)
B
error1 <- (sum(A)-sum(diag(A)))/sum(A)
predRight1 <- pred1==test1$Survived
error1
sum(predRight1)
pred2 <- predict(fit,test1)
pred2
pred2 = round(pred2)
pred2
pred2 = as.factor(pred2)
pred2
B <- table(pred2,test1$Survived)
test1$Survived = as.factor(test1$Survived)
B <- table(pred2,test1$Survived)
error2 <- (sum(B)-sum(diag(B)))/sum(B)
error2
predRight2 <- pred2==test1$Survived
sum(predRight2)
training$Age
training[is.na(training$Age)]
is.na(training$Age)
training[is.na(training$Age),]
names(training[is.na(training$Age),])
is.na(training$SibSp)
training[is.na(training$Age),]
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=training, method="class")
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=training, method="class")
fit
plot(fit)
text(fit)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
savehistory("~/R/titanic/test.Rhistory")
